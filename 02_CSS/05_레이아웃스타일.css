/* width, height */

#fixed-size {
  width: 300px;
  height: 150px;
  background-color: lightblue;
}

/* variable-size */
#variable-size {
  width: 20vw;
  height: 20vh;
  background-color: lightgreen;
}
/* px 고정크기 % 부모 기준 비율 vw, vh(화면 가득 채우고 싶을 때 100vh 사용) 뷰포트 너비, 높이 기준 비율  */

/* padding, margin */
.space {
  background: lightyellow;
  border: 1px solid;
  margin-bottom: 10px;
}

#padding1 {
  padding: 20px;
}

#padding2 {
  padding-top: 30px;
  padding-left: 10px;
  padding-right: 20px;
  padding-bottom: 40px;
}
/* padding: 30px 20px 40px 10px; 시계방향 top, right, bottom, left 로 써도 같음 */
/* padding: 30px 20px 40px; top right/left, bottom */
/* padding: 30px 20px; top/bottom, right/left */
/* 전체 패딩: 콘텐츠 위아래옆으로 모두 20px 
   부분 패딩: 콘텐츠 원하는 방향으로 여백 줄 수 있음 */

#margin1 {
  margin: 20px;
}

#margin2 {
  margin: 5px 15px 10px 30px;
}
/* 마진 충돌이 일어날 경우, 최대값으로 여백을 나타냄 */

.collapse-box {
  background-color: lightcoral;
  padding: 10px;
  border: 1px solid #444;
}

#box1 {
  margin-bottom: 50px;
}

#box2 {
  margin-top: 30px;
}

.center-box {
  width: 200px;
  height: 100px;
  background-color: lightseagreen;
  color: white;
  text-align: center;
  line-height: 100px;
  margin: auto;
}
/* height과 line-height 사이즈가 똑같으면 한줄 문장만 있을 때 가운데로 감(수직) */
/* 컨텐츠 박스가 전체 가운데로 감 */

.border {
  width: 100px;
  height: 100px;
  margin: 10px;
  background: #eee;
  display: inline-block;
}

#border1 {
  border: 2px solid red;
}

#border2 {
  border: 5px dashed green;
}

#border3 {
  border: 2px dotted blue;
}
/* solid 실선  dashed 점선 dotted 점선 */

.radius-box {
  width: 120px;
  height: 120px;
  background: plum;
  color: white;
  text-align: center;
  line-height: 120px;
  margin-bottom: 10px;
}

.radius1 {
  border-radius: 10px;
}

.radius2 {
  border-radius: 50%;
}

/* radius2는 120px의 50%이므로 60px이다. */

/* box-sizing */
.box {
  width: 300px;
  height: 200px;
  padding: 20px;
  border: 10px solid;
  background-color: lightcoral;
  margin: 10px;
}

.box-content {
  box-sizing: content-box;
}

.box-border {
  box-sizing: border-box;
}

/* display */
.display {
  background-color: pink;
  padding: 10px;
  margin: 5px;
  width: 150px;
  height: 70px;
}
.display-inline {
  display: inline;
}
/* display에 적용한 w,h값 안먹음 */
.display-block {
  display: block;
}
/* display에 적용한 w,h값은 적용되나 수평 배열안됨 */
.display-inline-block {
  display: inline-block;
}

.float {
  float: left;
  width: 80px;
  height: 80px;
  margin: 5px;
  background: skyblue;
  text-align: center;
  line-height: 80px;
}
/* "positon"이라는 글자가 float을 모두 빈 것으로 무시하고 나타남 */
/* 그래서 <h3 style="clear, both" 앞에 적용 */

/* position */

#outer {
  position: relative;
  width: 400px;
  height: 200px;
  background: #807676;
  overflow: auto;
}

/* overflow 스크롤  */

.position-box {
  width: 100px;
  height: 100px;
}

#relative {
  background-color: orange;
  position: relative;
  top: 20px;
  left: 20px;
}
/* position : top, bottom, left, right가 속성임 */
/* relative 기준은 outer기준, 자리 그대로 차지 */

#absolute {
  background-color: green;
  position: absolute;
  right: 20px;
}
/* absolute 기준은 outer 기준, 없으면 브라우저기준, 다른요소들이 무시함 */

#fixed {
  background: red;
  position: fixed;
  right: 20px;
  top: 30px;
}
/* fixed 기준은 브라우저 */

#sticky {
  background-color: blue;
  position: sticky;
  top: 0;
}
/* 스크롤 위치에 따라 변함, 평소 normal 일정위치에서 고정 */
.visibility {
  width: 100px;
  height: 100px;
  margin: 10px;
  background: lightgrey;
  display: inline-block;
}

#vis2 {
  visibility: visible;
}

#vis1 {
  visibility: hidden;
}

/* hidden: 사라지긴 하지만 그 값은 빈 공간이 그대로 남아있다 */

#dis1 {
  display: none;
}

/* none: 아예 값이 사라지고 옆부분이 채워준다 */

#z-outer {
  width: 200px;
  height: 200px;
  background: #ddd;
  position: relative;
}
.z-index {
  width: 100px;
  height: 100px;
  position: absolute;
  opacity: 0.5;
}

#z-index1 {
  background-color: red;
  z-index: 1;
  top: 20px;
  left: 20px;
}

#z-index2 {
  background-color: green;
  z-index: 2;
  top: 40px;
  left: 40px;
}

#z-index3 {
  background-color: blue;
  z-index: 9999;
}

/* z 인덱스가 높은 숫자일수록 위로 올라와 먼저 보이는 효과  */
