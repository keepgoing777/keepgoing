<!-- 고객 등록 -->
<insert id="insertCustomer" parameterType="Customer" useGeneratedKeys="true" keyProperty="customerNo">
    INSERT INTO customer(customer_name, company_number, phone, email, address, birth_date, gender, passport_no, nationality, grade, used_amount, user_no, created_at, updated_at)
    VALUES (#{customerName}, #{companyNumber}, #{phone}, #{email}, #{address}, #{birthDate}, #{gender}, #{passportNo}, #{nationality}, #{grade}, #{usedAmount}, #{userNo}, NOW(), NOW())
</insert>

<!-- 고객 정보 수정 -->
<update id="updateCustomer" parameterType="Customer">
    UPDATE customer SET
        customer_name = #{customerName},
        company_number = #{companyNumber},
        phone = #{phone},
        email = #{email},
        address = #{address},
        birth_date = #{birthDate},
        gender = #{gender},
        passport_no = #{passportNo},
        nationality = #{nationality},
        grade = #{grade},
        used_amount = #{usedAmount},
        user_no = #{userNo},
        updated_at = NOW()
    WHERE customer_no = #{customerNo}
</update>

<!-- 고객 삭제 -->
<delete id="deleteCustomer" parameterType="int">
    DELETE FROM customer WHERE customer_no = #{customerNo}
</delete>

<!-- 고객 번호로 조회 -->
<select id="selectCustomerByNo" parameterType="int" resultMap="CustomerMap">
    SELECT * FROM customer WHERE customer_no = #{customerNo}
</select>

<!-- 전체 고객 조회 -->
<select id="selectAllCustomers" resultMap="CustomerMap">
    SELECT * FROM customer ORDER BY created_at DESC
</select>

<!-- 고객명으로 검색 -->
<select id="selectCustomersByName" parameterType="String" resultMap="CustomerMap">
    SELECT * FROM customer WHERE customer_name LIKE CONCAT('%', #{customerName}, '%')
</select>

<!-- 고객 등급별 조회 -->
<select id="selectCustomersByGrade" parameterType="String" resultMap="CustomerMap">
    SELECT * FROM customer WHERE grade = #{grade}
</select>
예약 Mapper (수정됨)
xml<!-- 예약 등록 -->
<insert id="insertBooking" parameterType="Booking" useGeneratedKeys="true" keyProperty="bookingNo">
    INSERT INTO booking(customer_no, product_no, travel_date, return_date, adult_count, child_count, infant_count, total_amount, discount_amount, payment_amount, booking_status, payment_method, booking_date, payment_date, user_no)
    VALUES (#{customerNo}, #{productNo}, #{travelDate}, #{returnDate}, #{adultCount}, #{childCount}, #{infantCount}, #{totalAmount}, #{discountAmount}, #{paymentAmount}, #{bookingStatus}, #{paymentMethod}, NOW(), #{paymentDate}, #{userNo})
</insert>

<!-- 예약 정보 수정 -->
<update id="updateBooking" parameterType="Booking">
    UPDATE booking SET
        customer_no = #{customerNo},
        product_no = #{productNo},
        travel_date = #{travelDate},
        return_date = #{returnDate},
        adult_count = #{adultCount},
        child_count = #{childCount},
        infant_count = #{infantCount},
        total_amount = #{totalAmount},
        discount_amount = #{discountAmount},
        payment_amount = #{paymentAmount},
        booking_status = #{bookingStatus},
        payment_method = #{paymentMethod},
        payment_date = #{paymentDate},
        user_no = #{userNo}
    WHERE booking_no = #{bookingNo}
</update>

<!-- 예약 삭제 -->
<delete id="deleteBooking" parameterType="int">
    DELETE FROM booking WHERE booking_no = #{bookingNo}
</delete>

<!-- 예약 번호로 조회 -->
<select id="selectBookingByNo" parameterType="int" resultMap="BookingMap">
    SELECT * FROM booking WHERE booking_no = #{bookingNo}
</select>

<!-- 고객별 예약 조회 -->
<select id="selectBookingsByCustomerNo" parameterType="int" resultMap="BookingMap">
    SELECT * FROM booking WHERE customer_no = #{customerNo} ORDER BY booking_date DESC
</select>

<!-- 전체 예약 조회 -->
<select id="selectAllBookings" resultMap="BookingMap">
    SELECT * FROM booking ORDER BY booking_date DESC
</select>

<!-- 예약 상태별 조회 -->
<select id="selectBookingsByStatus" parameterType="String" resultMap="BookingMap">
    SELECT * FROM booking WHERE booking_status = #{bookingStatus}
</select>
클레임 Mapper (신규 - 문의/피드백 통합)
xml<!-- 클레임 등록 -->
<insert id="insertClaim" parameterType="Claim" useGeneratedKeys="true" keyProperty="claimNo">
    INSERT INTO claim(claim_type, customer_no, project_id, product_no, source, score, comment, claim_date, claim_status, user_no)
    VALUES (#{claimType}, #{customerNo}, #{projectId}, #{productNo}, #{source}, #{score}, #{comment}, NOW(), #{claimStatus}, #{userNo})
</insert>

<!-- 클레임 수정 -->
<update id="updateClaim" parameterType="Claim">
    UPDATE claim SET
        claim_type = #{claimType},
        customer_no = #{customerNo},
        project_id = #{projectId},
        product_no = #{productNo},
        source = #{source},
        score = #{score},
        comment = #{comment},
        claim_status = #{claimStatus},
        user_no = #{userNo}
    WHERE claim_no = #{claimNo}
</update>

<!-- 클레임 처리 완료 -->
<update id="updateClaimChecked" parameterType="Claim">
    UPDATE claim SET
        claim_status = #{claimStatus},
        checked_date = NOW(),
        user_no = #{userNo}
    WHERE claim_no = #{claimNo}
</update>

<!-- 클레임 삭제 -->
<delete id="deleteClaim" parameterType="int">
    DELETE FROM claim WHERE claim_no = #{claimNo}
</delete>

<!-- 클레임 번호로 조회 -->
<select id="selectClaimByNo" parameterType="int" resultMap="ClaimMap">
    SELECT * FROM claim WHERE claim_no = #{claimNo}
</select>

<!-- 고객별 클레임 조회 -->
<select id="selectClaimsByCustomerNo" parameterType="int" resultMap="ClaimMap">
    SELECT * FROM claim WHERE customer_no = #{customerNo} ORDER BY claim_date DESC
</select>

<!-- 전체 클레임 조회 -->
<select id="selectAllClaims" resultMap="ClaimMap">
    SELECT * FROM claim ORDER BY claim_date DESC
</select>

<!-- 클레임 타입별 조회 -->
<select id="selectClaimsByType" parameterType="String" resultMap="ClaimMap">
    SELECT * FROM claim WHERE claim_type = #{claimType} ORDER BY claim_date DESC
</select>

<!-- 클레임 상태별 조회 -->
<select id="selectClaimsByStatus" parameterType="String" resultMap="ClaimMap">
    SELECT * FROM claim WHERE claim_status = #{claimStatus} ORDER BY claim_date DESC
</select>

<!-- 평점별 피드백 조회 (피드백 타입만) -->
<select id="selectClaimsByScore" parameterType="int" resultMap="ClaimMap">
    SELECT * FROM claim WHERE claim_type = '피드백' AND score = #{score} ORDER BY claim_date DESC
</select>

<!-- 프로젝트별 피드백 조회 -->
<select id="selectClaimsByProjectId" parameterType="int" resultMap="ClaimMap">
    SELECT * FROM claim WHERE project_id = #{projectId} ORDER BY claim_date DESC
</select>

<!-- 상품별 문의 조회 -->
<select id="selectClaimsByProductNo" parameterType="int" resultMap="ClaimMap">
    SELECT * FROM claim WHERE product_no = #{productNo} ORDER BY claim_date DESC
</select>