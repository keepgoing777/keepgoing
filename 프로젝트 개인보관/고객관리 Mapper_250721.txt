고객


 <!-- 고객 등록 -->
    <insert id="insertCustomer" parameterType="Customer" useGeneratedKeys="true" keyProperty="customerNo">
        INSERT INTO customer(name, phone, email, address, birth_date, gender, passport_no, nationality, grade, total_bookings, total_amount, user_no, created_at, updated_at)
        VALUES (#{name}, #{phone}, #{email}, #{address}, #{birthDate}, #{gender}, #{passportNo}, #{nationality}, #{grade}, #{totalBookings}, #{totalAmount}, #{userNo}, NOW(), NOW())
    </insert>

 <!-- 고객 정보 수정 -->
    <update id="updateCustomer" parameterType="Customer">
        UPDATE customer SET
            name = #{name},
            phone = #{phone},
            email = #{email},
            address = #{address},
            birth_date = #{birthDate},
            gender = #{gender},
            passport_no = #{passportNo},
            nationality = #{nationality},
            grade = #{grade},
            total_bookings = #{totalBookings},
            total_amount = #{totalAmount},
            user_no = #{userNo},
            updated_at = NOW()
        WHERE customer_no = #{customerNo}
    </update>

 <!-- 고객 삭제 -->
    <delete id="deleteCustomer" parameterType="int">
        DELETE FROM customer WHERE customer_no = #{customerNo}
    </delete>
    
    <!-- 고객 번호로 조회 -->
    <select id="selectCustomerByNo" parameterType="int" resultMap="CustomerMap">
        SELECT * FROM customer WHERE customer_no = #{customerNo}
    </select>
    
    <!-- 전체 고객 조회 -->
    <select id="selectAllCustomers" resultMap="CustomerMap">
        SELECT * FROM customer ORDER BY created_at DESC
    </select>
    
    <!-- 고객명으로 검색 -->
    <select id="selectCustomersByName" parameterType="String" resultMap="CustomerMap">
        SELECT * FROM customer WHERE name LIKE CONCAT('%', #{name}, '%')
    </select>
    
    <!-- 고객 등급별 조회 -->
    <select id="selectCustomersByGrade" parameterType="String" resultMap="CustomerMap">
        SELECT * FROM customer WHERE grade = #{grade}
    </select>


예약

<!-- 예약 등록 -->
    <insert id="insertBooking" parameterType="Booking" useGeneratedKeys="true" keyProperty="bookingNo">
        INSERT INTO booking(customer_no, package_no, travel_date, return_date, adult_count, child_count, infant_count, total_amount, payment_status, booking_status, create_date, user_no)
        VALUES (#{customerNo}, #{packageNo}, #{travelDate}, #{returnDate}, #{adultCount}, #{childCount}, #{infantCount}, #{totalAmount}, #{paymentStatus}, #{bookingStatus}, NOW(), #{userNo})
    </insert>
    
    <!-- 예약 정보 수정 -->
    <update id="updateBooking" parameterType="Booking">
        UPDATE booking SET
            customer_no = #{customerNo},
            package_no = #{packageNo},
            travel_date = #{travelDate},
            return_date = #{returnDate},
            adult_count = #{adultCount},
            child_count = #{childCount},
            infant_count = #{infantCount},
            total_amount = #{totalAmount},
            payment_status = #{paymentStatus},
            booking_status = #{bookingStatus},
            user_no = #{userNo}
        WHERE booking_no = #{bookingNo}
    </update>
    
    <!-- 예약 삭제 -->
    <delete id="deleteBooking" parameterType="int">
        DELETE FROM booking WHERE booking_no = #{bookingNo}
    </delete>
    
    <!-- 예약 번호로 조회 -->
    <select id="selectBookingByNo" parameterType="int" resultMap="BookingMap">
        SELECT * FROM booking WHERE booking_no = #{bookingNo}
    </select>
    
    <!-- 고객별 예약 조회 -->
    <select id="selectBookingsByCustomerNo" parameterType="int" resultMap="BookingMap">
        SELECT * FROM booking WHERE customer_no = #{customerNo} ORDER BY create_date DESC
    </select>
    
    <!-- 전체 예약 조회 -->
    <select id="selectAllBookings" resultMap="BookingMap">
        SELECT * FROM booking ORDER BY create_date DESC
    </select>
    
    <!-- 예약 상태별 조회 -->
    <select id="selectBookingsByStatus" parameterType="String" resultMap="BookingMap">
        SELECT * FROM booking WHERE booking_status = #{bookingStatus}
    </select>

고객피드백
 <!-- 피드백 등록 -->
    <insert id="insertCustomerFeedback" parameterType="CustomerFeedback" useGeneratedKeys="true" keyProperty="feedbackId">
        INSERT INTO customer_feedback(customer_no, booking_no, project_id, rating, review_content, service_rating, guide_rating, created_at, user_no)
        VALUES (#{customerNo}, #{bookingNo}, #{projectId}, #{rating}, #{reviewContent}, #{serviceRating}, #{guideRating}, NOW(), #{userNo})
    </insert>
    
    <!-- 피드백 수정 -->
    <update id="updateCustomerFeedback" parameterType="CustomerFeedback">
        UPDATE customer_feedback SET
            customer_no = #{customerNo},
            booking_no = #{bookingNo},
            project_id = #{projectId},
            rating = #{rating},
            review_content = #{reviewContent},
            service_rating = #{serviceRating},
            guide_rating = #{guideRating},
            checked_at = #{checkedAt},
            user_no = #{userNo}
        WHERE feedback_id = #{feedbackId}
    </update>
    
    <!-- 피드백 삭제 -->
    <delete id="deleteCustomerFeedback" parameterType="int">
        DELETE FROM customer_feedback WHERE feedback_id = #{feedbackId}
    </delete>
    
    <!-- 피드백 ID로 조회 -->
    <select id="selectCustomerFeedbackById" parameterType="int" resultMap="CustomerFeedbackMap">
        SELECT * FROM customer_feedback WHERE feedback_id = #{feedbackId}
    </select>
    
    <!-- 고객별 피드백 조회 -->
    <select id="selectCustomerFeedbackByCustomerNo" parameterType="int" resultMap="CustomerFeedbackMap">
        SELECT * FROM customer_feedback WHERE customer_no = #{customerNo} ORDER BY created_at DESC
    </select>
    
    <!-- 예약별 피드백 조회 -->
    <select id="selectCustomerFeedbackByBookingNo" parameterType="int" resultMap="CustomerFeedbackMap">
        SELECT * FROM customer_feedback WHERE booking_no = #{bookingNo}
    </select>
    
    <!-- 전체 피드백 조회 -->
    <select id="selectAllCustomerFeedbacks" resultMap="CustomerFeedbackMap">
        SELECT * FROM customer_feedback ORDER BY created_at DESC
    </select>
    
    <!-- 평점별 피드백 조회 -->
    <select id="selectCustomerFeedbackByRating" parameterType="int" resultMap="CustomerFeedbackMap">
        SELECT * FROM customer_feedback WHERE rating = #{rating}
    </select>


고객문의


 <!-- 문의 등록 -->
    <insert id="insertCustomerInquiry" parameterType="CustomerInquiry" useGeneratedKeys="true" keyProperty="inquiryNo">
        INSERT INTO customer_inquiry(customer_no, title, content, status, create_date)
        VALUES (#{customerNo}, #{title}, #{content}, #{status}, NOW())
    </insert>
    
    <!-- 문의 답변 -->
    <update id="updateCustomerInquiryAnswer" parameterType="CustomerInquiry">
        UPDATE customer_inquiry SET
            answer = #{answer},
            status = #{status},
            user_no = #{userNo},
            answered_at = NOW()
        WHERE inquiry_no = #{inquiryNo}
    </update>
    
    <!-- 문의 수정 -->
    <update id="updateCustomerInquiry" parameterType="CustomerInquiry">
        UPDATE customer_inquiry SET
            customer_no = #{customerNo},
            title = #{title},
            content = #{content},
            answer = #{answer},
            status = #{status},
            user_no = #{userNo}
        WHERE inquiry_no = #{inquiryNo}
    </update>
    
    <!-- 문의 삭제 -->
    <delete id="deleteCustomerInquiry" parameterType="int">
        DELETE FROM customer_inquiry WHERE inquiry_no = #{inquiryNo}
    </delete>
    
    <!-- 문의 번호로 조회 -->
    <select id="selectCustomerInquiryByNo" parameterType="int" resultMap="CustomerInquiryMap">
        SELECT * FROM customer_inquiry WHERE inquiry_no = #{inquiryNo}
    </select>
    
    <!-- 고객별 문의 조회 -->
    <select id="selectCustomerInquiriesByCustomerNo" parameterType="int" resultMap="CustomerInquiryMap">
        SELECT * FROM customer_inquiry WHERE customer_no = #{customerNo} ORDER BY create_date DESC
    </select>
    
    <!-- 전체 문의 조회 -->
    <select id="selectAllCustomerInquiries" resultMap="CustomerInquiryMap">
        SELECT * FROM customer_inquiry ORDER BY create_date DESC
    </select>
    
    <!-- 처리 상태별 문의 조회 -->
    <select id="selectCustomerInquiriesByStatus" parameterType="String" resultMap="CustomerInquiryMap">
        SELECT * FROM customer_inquiry WHERE status = #{status} ORDER BY create_date DESC
    </select>


결제정보

 <!-- 결제 정보 등록 -->
    <insert id="insertReservationPayment" parameterType="ReservationPayment" useGeneratedKeys="true" keyProperty="paymentId">
        INSERT INTO reservation_payment(booking_no, payment_method, payment_amount, payment_date, payment_status)
        VALUES (#{bookingNo}, #{paymentMethod}, #{paymentAmount}, NOW(), #{paymentStatus})
    </insert>
    
    <!-- 결제 정보 수정 -->
    <update id="updateReservationPayment" parameterType="ReservationPayment">
        UPDATE reservation_payment SET
            booking_no = #{bookingNo},
            payment_method = #{paymentMethod},
            payment_amount = #{paymentAmount},
            payment_status = #{paymentStatus}
        WHERE payment_id = #{paymentId}
    </update>
    
    <!-- 결제 정보 삭제 -->
    <delete id="deleteReservationPayment" parameterType="int">
        DELETE FROM reservation_payment WHERE payment_id = #{paymentId}
    </delete>
    
    <!-- 결제 ID로 조회 -->
    <select id="selectReservationPaymentById" parameterType="int" resultMap="ReservationPaymentMap">
        SELECT * FROM reservation_payment WHERE payment_id = #{paymentId}
    </select>
    
    <!-- 예약별 결제 정보 조회 -->
    <select id="selectReservationPaymentByBookingNo" parameterType="int" resultMap="ReservationPaymentMap">
        SELECT * FROM reservation_payment WHERE booking_no = #{bookingNo} ORDER BY payment_date DESC
    </select>
    
    <!-- 전체 결제 정보 조회 -->
    <select id="selectAllReservationPayments" resultMap="ReservationPaymentMap">
        SELECT * FROM reservation_payment ORDER BY payment_date DESC
    </select>
    
    <!-- 결제 상태별 조회 -->
    <select id="selectReservationPaymentsByStatus" parameterType="String" resultMap="ReservationPaymentMap">
        SELECT * FROM reservation_payment WHERE payment_status = #{paymentStatus}
    </select>


동반자

   <!-- 동반자 정보 등록 -->
    <insert id="insertReservationPassenger" parameterType="ReservationPassenger" useGeneratedKeys="true" keyProperty="passengerId">
        INSERT INTO reservation_passenger(booking_no, passenger_name, phone, passport_no, birth_date, gender)
        VALUES (#{bookingNo}, #{passengerName}, #{phone}, #{passportNo}, #{birthDate}, #{gender})
    </insert>
    
    <!-- 동반자 정보 수정 -->
    <update id="updateReservationPassenger" parameterType="ReservationPassenger">
        UPDATE reservation_passenger SET
            booking_no = #{bookingNo},
            passenger_name = #{passengerName},
            phone = #{phone},
            passport_no = #{passportNo},
            birth_date = #{birthDate},
            gender = #{gender}
        WHERE passenger_id = #{passengerId}
    </update>
    
    <!-- 동반자 정보 삭제 -->
    <delete id="deleteReservationPassenger" parameterType="int">
        DELETE FROM reservation_passenger WHERE passenger_id = #{passengerId}
    </delete>
    
    <!-- 동반자 ID로 조회 -->
    <select id="selectReservationPassengerById" parameterType="int" resultMap="ReservationPassengerMap">
        SELECT * FROM reservation_passenger WHERE passenger_id = #{passengerId}
    </select>
    
    <!-- 예약별 동반자 조회 -->
    <select id="selectReservationPassengersByBookingNo" parameterType="int" resultMap="ReservationPassengerMap">
        SELECT * FROM reservation_passenger WHERE booking_no = #{bookingNo}
    </select>
    
    <!-- 전체 동반자 조회 -->
    <select id="selectAllReservationPassengers" resultMap="ReservationPassengerMap">
        SELECT * FROM reservation_passenger
    </select>
    
    <!-- 예약별 동반자 삭제 -->
    <delete id="deleteReservationPassengersByBookingNo" parameterType="int">
        DELETE FROM reservation_passenger WHERE booking_no = #{bookingNo}
    </delete>




